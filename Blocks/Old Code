
Need to install gesture recognizer on the _mainView and detect layer:
- (CALayer *)hitTest:(CGPoint)thePoint
CALayer* layerThatWasTapped = [gestureView.layer hitTest:[gestureRecognizer locationInView:gestureView]];


    UIPanGestureRecognizer* gestureRecognizer = [[UIPanGestureRecognizer alloc] initWithTarget:self action:@selector(handlePan:)];
        [cell addGestureRecognizer:gestureRecognizer];

    
    CGSize _scrollViewContentSize;
    CGSize _scrollViewSize;
        UIScrollView* _scrollView;

    //Create a Scrollview
    /*_scrollView = [[UIScrollView alloc] initWithFrame:CGRectMake(0, 0, self.view.frame.size.width, self.view.frame.size.height)];
    _scrollView.autoresizingMask = UIViewAutoresizingFlexibleWidth | UIViewAutoresizingFlexibleHeight;
    _scrollView.autoresizesSubviews = YES;
    _scrollView.backgroundColor = [UIColor lightGrayColor];
    [self.view addSubview:_scrollView];
    _scrollView.scrollEnabled = YES;
    
    // Position Scroll View
    _scrollViewContentSize = CGSizeMake(_scrollView.frame.size.width, _scrollView.frame.size.height);
    _scrollView.contentSize = _scrollViewContentSize;
    _scrollView.contentOffset = CGPointMake(0, 0);
    //    _scrollView.contentOffset = CGPointMake(_scrollView.contentSize.width - _scrollView.frame.size.width, 0);

     */

-(void)drawCompletionSegment {
    _completedGradient = [CAGradientLayer layer];
    _completedGradient.frame = CGRectMake(_scrollView.contentSize.width - DISPLAY_MARGIN, 0, self.view.frame.size.width, _scrollView.frame.size.height);
    _completedGradient.colors = @[
    (id)[[UIColor colorWithWhite:0.0f alpha:0.8f] CGColor],
    (id)[[UIColor colorWithWhite:0.0f alpha:0.5f] CGColor],
    (id)[[UIColor colorWithWhite:0.0f alpha:0.3f] CGColor]];
    _completedGradient.locations = @[@0.00f, @0.05f, @0.5f];
    _completedGradient.startPoint = CGPointMake(0.0, 0.5);
    _completedGradient.endPoint = CGPointMake(1.0, 0.5);
}

    
    //Add Background
    /*UIImageView* imageView = [[UIImageView alloc] initWithImage:[UIImage imageNamed:@"subtle-pattern-2.jpg"]];
    imageView.contentMode = UIViewContentModeScaleToFill;
    imageView.frame = self.view.bounds;
    imageView.autoresizingMask = UIViewAutoresizingFlexibleWidth | UIViewAutoresizingFlexibleHeight;
    [_mainView addSubview:imageView];
    */
    
-(void)resizeScrollViewContent {
    if (self.interfaceOrientation == UIInterfaceOrientationLandscapeLeft || self.interfaceOrientation == UIInterfaceOrientationLandscapeRight) {
        NSLog(@"Landscape");
    } else if (self.interfaceOrientation == UIInterfaceOrientationMaskPortrait) {
        NSLog(@"Portrait");
    }
    
    //float _mainViewContentWidth = MAX((_durationScale *[self getTotalDuration]) + DISPLAY_MARGIN, _scrollView.frame.size.width);
    //_scrollViewContentSize = CGSizeMake(_mainViewContentWidth, _scrollViewContentSize.height);
    
    _scrollView.frame = CGRectMake(0, 0, self.view.frame.size.width, self.view.frame.size.height);
    _scrollView.contentSize = _scrollView.frame.size;
    _scrollView.contentOffset = CGPointMake(0, 0);
    
    _mainView.frame = CGRectMake(10, 10, _scrollView.frame.size.width - 20, _scrollView.frame.size.height - 20);
    
}


const float DELETE_BOX_WIDTH = 600;
const float DELETE_BOX_HEIGHT = 100;

-(void)drawDeleteBox {
    _deleteBox = [[UIView alloc] initWithFrame:CGRectMake((_scrollView.frame.size.width - DELETE_BOX_WIDTH-DISPLAY_MARGIN)/2, _scrollView.frame.size.height - DISPLAY_MARGIN - DELETE_BOX_HEIGHT, DELETE_BOX_WIDTH, DELETE_BOX_HEIGHT)];
    //view.backgroundColor = [UIColor blackColor];
    //view.layer.shadowOpacity = 0.5;
    
    
    _deleteBox.autoresizingMask = UIViewAutoresizingFlexibleTopMargin | UIViewAutoresizingFlexibleLeftMargin | UIViewAutoresizingFlexibleRightMargin;
    
    UILabel* label = [[UILabel alloc] initWithFrame:CGRectMake(75, 0, 600, 100)];
    label.text = @"DRAG HERE TO DELETE";
    label.font = [UIFont fontWithName:@"Helvetica-Bold" size:42];
    label.textColor = [UIColor blackColor];
    label.alpha = 0.5;
    label.backgroundColor = [UIColor clearColor];
    label.shadowColor = [UIColor darkGrayColor];
    [_deleteBox addSubview:label];
    
    CAGradientLayer* layer = [CAGradientLayer layer];
    layer.frame = CGRectMake(0, 0, _deleteBox.frame.size.width, _deleteBox.frame.size.height);

    layer.colors = @[
        (id)[[UIColor colorWithWhite:0.0f alpha:0.8f] CGColor],
        (id)[[UIColor colorWithWhite:0.0f alpha:0.5f] CGColor],
        (id)[[UIColor colorWithWhite:0.0f alpha:0.3f] CGColor]];
    
    layer.locations = @[@0.0f, @0.01f, @0.03f];
    layer.startPoint = CGPointMake(0.0, 0.5);
    layer.endPoint = CGPointMake(1.0, 0.5);
    [_deleteBox.layer insertSublayer:layer atIndex:0];
    
    [self.view addSubview:_deleteBox];
}
